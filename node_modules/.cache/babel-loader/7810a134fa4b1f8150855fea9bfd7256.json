{"ast":null,"code":"/*!\n * bsCustomFileInput v1.3.4 (https://github.com/Johann-S/bs-custom-file-input)\n * Copyright 2018 - 2020 Johann-S <johann.servoire@gmail.com>\n * Licensed under MIT (https://github.com/Johann-S/bs-custom-file-input/blob/master/LICENSE)\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.bsCustomFileInput = factory());\n})(this, function () {\n  'use strict';\n\n  var Selector = {\n    CUSTOMFILE: '.custom-file input[type=\"file\"]',\n    CUSTOMFILELABEL: '.custom-file-label',\n    FORM: 'form',\n    INPUT: 'input'\n  };\n  var textNodeType = 3;\n\n  var getDefaultText = function getDefaultText(input) {\n    var defaultText = '';\n    var label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL);\n\n    if (label) {\n      defaultText = label.textContent;\n    }\n\n    return defaultText;\n  };\n\n  var findFirstChildNode = function findFirstChildNode(element) {\n    if (element.childNodes.length > 0) {\n      var childNodes = [].slice.call(element.childNodes);\n\n      for (var i = 0; i < childNodes.length; i++) {\n        var node = childNodes[i];\n\n        if (node.nodeType !== textNodeType) {\n          return node;\n        }\n      }\n    }\n\n    return element;\n  };\n\n  var restoreDefaultText = function restoreDefaultText(input) {\n    var defaultText = input.bsCustomFileInput.defaultText;\n    var label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL);\n\n    if (label) {\n      var element = findFirstChildNode(label);\n      element.textContent = defaultText;\n    }\n  };\n\n  var fileApi = !!window.File;\n  var FAKE_PATH = 'fakepath';\n  var FAKE_PATH_SEPARATOR = '\\\\';\n\n  var getSelectedFiles = function getSelectedFiles(input) {\n    if (input.hasAttribute('multiple') && fileApi) {\n      return [].slice.call(input.files).map(function (file) {\n        return file.name;\n      }).join(', ');\n    }\n\n    if (input.value.indexOf(FAKE_PATH) !== -1) {\n      var splittedValue = input.value.split(FAKE_PATH_SEPARATOR);\n      return splittedValue[splittedValue.length - 1];\n    }\n\n    return input.value;\n  };\n\n  function handleInputChange() {\n    var label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL);\n\n    if (label) {\n      var element = findFirstChildNode(label);\n      var inputValue = getSelectedFiles(this);\n\n      if (inputValue.length) {\n        element.textContent = inputValue;\n      } else {\n        restoreDefaultText(this);\n      }\n    }\n  }\n\n  function handleFormReset() {\n    var customFileList = [].slice.call(this.querySelectorAll(Selector.INPUT)).filter(function (input) {\n      return !!input.bsCustomFileInput;\n    });\n\n    for (var i = 0, len = customFileList.length; i < len; i++) {\n      restoreDefaultText(customFileList[i]);\n    }\n  }\n\n  var customProperty = 'bsCustomFileInput';\n  var Event = {\n    FORMRESET: 'reset',\n    INPUTCHANGE: 'change'\n  };\n  var bsCustomFileInput = {\n    init: function init(inputSelector, formSelector) {\n      if (inputSelector === void 0) {\n        inputSelector = Selector.CUSTOMFILE;\n      }\n\n      if (formSelector === void 0) {\n        formSelector = Selector.FORM;\n      }\n\n      var customFileInputList = [].slice.call(document.querySelectorAll(inputSelector));\n      var formList = [].slice.call(document.querySelectorAll(formSelector));\n\n      for (var i = 0, len = customFileInputList.length; i < len; i++) {\n        var input = customFileInputList[i];\n        Object.defineProperty(input, customProperty, {\n          value: {\n            defaultText: getDefaultText(input)\n          },\n          writable: true\n        });\n        handleInputChange.call(input);\n        input.addEventListener(Event.INPUTCHANGE, handleInputChange);\n      }\n\n      for (var _i = 0, _len = formList.length; _i < _len; _i++) {\n        formList[_i].addEventListener(Event.FORMRESET, handleFormReset);\n\n        Object.defineProperty(formList[_i], customProperty, {\n          value: true,\n          writable: true\n        });\n      }\n    },\n    destroy: function destroy() {\n      var formList = [].slice.call(document.querySelectorAll(Selector.FORM)).filter(function (form) {\n        return !!form.bsCustomFileInput;\n      });\n      var customFileInputList = [].slice.call(document.querySelectorAll(Selector.INPUT)).filter(function (input) {\n        return !!input.bsCustomFileInput;\n      });\n\n      for (var i = 0, len = customFileInputList.length; i < len; i++) {\n        var input = customFileInputList[i];\n        restoreDefaultText(input);\n        input[customProperty] = undefined;\n        input.removeEventListener(Event.INPUTCHANGE, handleInputChange);\n      }\n\n      for (var _i2 = 0, _len2 = formList.length; _i2 < _len2; _i2++) {\n        formList[_i2].removeEventListener(Event.FORMRESET, handleFormReset);\n\n        formList[_i2][customProperty] = undefined;\n      }\n    }\n  };\n  return bsCustomFileInput;\n});","map":{"version":3,"sources":["../src/selector.js","../src/util.js","../src/eventHandlers.js","../src/index.js"],"names":["Selector","CUSTOMFILE","CUSTOMFILELABEL","FORM","INPUT","textNodeType","getDefaultText","defaultText","label","input","findFirstChildNode","element","childNodes","i","node","restoreDefaultText","fileApi","window","FAKE_PATH","FAKE_PATH_SEPARATOR","getSelectedFiles","file","splittedValue","inputValue","customFileList","len","customProperty","Event","FORMRESET","INPUTCHANGE","bsCustomFileInput","init","inputSelector","formSelector","customFileInputList","document","formList","Object","value","writable","handleInputChange","destroy","form"],"mappings":"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","sourcesContent":["const Selector = {\n  CUSTOMFILE: '.custom-file input[type=\"file\"]',\n  CUSTOMFILELABEL: '.custom-file-label',\n  FORM: 'form',\n  INPUT: 'input',\n}\n\nexport default Selector\n","import Selector from './selector'\n\nconst textNodeType = 3\nconst getDefaultText = (input) => {\n  let defaultText = ''\n\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    defaultText = label.textContent\n  }\n\n  return defaultText\n}\n\nconst findFirstChildNode = (element) => {\n  if (element.childNodes.length > 0) {\n    const childNodes = [].slice.call(element.childNodes)\n\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i]\n      if (node.nodeType !== textNodeType) {\n        return node\n      }\n    }\n  }\n\n  return element\n}\n\nconst restoreDefaultText = (input) => {\n  const defaultText = input.bsCustomFileInput.defaultText\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n\n    element.textContent = defaultText\n  }\n}\n\nexport {\n  getDefaultText,\n  findFirstChildNode,\n  restoreDefaultText,\n}\n","import { findFirstChildNode, restoreDefaultText } from './util'\nimport Selector from './selector'\n\nconst fileApi = !!window.File\nconst FAKE_PATH = 'fakepath'\nconst FAKE_PATH_SEPARATOR = '\\\\'\n\nconst getSelectedFiles = (input) => {\n  if (input.hasAttribute('multiple') && fileApi) {\n    return [].slice.call(input.files)\n      .map((file) => file.name)\n      .join(', ')\n  }\n\n  if (input.value.indexOf(FAKE_PATH) !== -1) {\n    const splittedValue = input.value.split(FAKE_PATH_SEPARATOR)\n\n    return splittedValue[splittedValue.length - 1]\n  }\n\n  return input.value\n}\n\nfunction handleInputChange() {\n  const label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n    const inputValue = getSelectedFiles(this)\n\n    if (inputValue.length) {\n      element.textContent = inputValue\n    } else {\n      restoreDefaultText(this)\n    }\n  }\n}\n\nfunction handleFormReset() {\n  const customFileList = [].slice.call(this.querySelectorAll(Selector.INPUT))\n    .filter((input) => !!input.bsCustomFileInput)\n\n  for (let i = 0, len = customFileList.length; i < len; i++) {\n    restoreDefaultText(customFileList[i])\n  }\n}\n\nexport {\n  handleInputChange,\n  handleFormReset,\n}\n","import { getDefaultText, restoreDefaultText } from './util'\nimport { handleFormReset, handleInputChange } from './eventHandlers'\nimport Selector from './selector'\n\nconst customProperty = 'bsCustomFileInput'\nconst Event = {\n  FORMRESET   : 'reset',\n  INPUTCHANGE : 'change',\n}\n\nconst bsCustomFileInput = {\n  init(inputSelector = Selector.CUSTOMFILE, formSelector = Selector.FORM) {\n    const customFileInputList = [].slice.call(document.querySelectorAll(inputSelector))\n    const formList = [].slice.call(document.querySelectorAll(formSelector))\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      Object.defineProperty(input, customProperty, {\n        value: {\n          defaultText: getDefaultText(input),\n        },\n        writable: true,\n      })\n\n      handleInputChange.call(input)\n      input.addEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].addEventListener(Event.FORMRESET, handleFormReset)\n      Object.defineProperty(formList[i], customProperty, {\n        value: true,\n        writable: true,\n      })\n    }\n  },\n\n  destroy() {\n    const formList = [].slice.call(document.querySelectorAll(Selector.FORM))\n      .filter((form) => !!form.bsCustomFileInput)\n    const customFileInputList = [].slice.call(document.querySelectorAll(Selector.INPUT))\n      .filter((input) => !!input.bsCustomFileInput)\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      restoreDefaultText(input)\n      input[customProperty] = undefined\n\n      input.removeEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].removeEventListener(Event.FORMRESET, handleFormReset)\n      formList[i][customProperty] = undefined\n    }\n  },\n}\n\nexport default bsCustomFileInput\n"]},"metadata":{},"sourceType":"script"}